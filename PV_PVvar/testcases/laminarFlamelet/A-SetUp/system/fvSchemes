/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  3.0.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default         Euler; // first order for stability
}

gradSchemes
{
    default         Gauss linear;
}

divSchemes
{
   // default         none;
    default         Gauss linear;
    div(phi,U)      Gauss linear;  // SuperBee for stability, linear is best for accuracy
    div(phid,p)     Gauss linear;
    div(phi,K)      Gauss linear;
    div(phi,h)      Gauss limitedLinear 0;
    div(phi,Z)      Gauss limitedLinear 0;
    div(U)          Gauss linear;
    div((((rho*nut)+thermo:mu)*dev2(T(grad(U))))) Gauss linear;
    div(((rho*nuEff)*dev2(T(grad(U))))) Gauss linear;
    div(((thermo:mu+(rho*nut))*dev2(T(grad(U))))) Gauss linear;
    // div(((muSmooke+(rho*nut))*dev2(T(grad(U))))) Gauss linear;
    div(phi,Yi_h)   Gauss limitedLinear 0;
    div(phiVc,Yi_h) Gauss limitedLinear 0;
    div(qPrefDiff)  Gauss linear;
    div(phi,PV)     Gauss limitedLinear 0; //SuperBee; //Gauss linear;
    div(phi,PVvar)  Gauss limitedLinear 0; //SuperBee; //Gauss linear;
}

laplacianSchemes
{
    default         Gauss linear orthogonal;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         orthogonal;
}


// ************************************************************************* //
